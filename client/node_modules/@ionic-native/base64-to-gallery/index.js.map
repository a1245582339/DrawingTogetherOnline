{"version":3,"sources":["../../../src/@ionic-native/plugins/base64-to-gallery/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;GAkBG;AASH,IAAa,eAAe;IAAS,mCAAiB;IAAtD;;IAsBA,CAAC;IApBC;;;;;OAKG;IAKH,yCAAe,GAAf,UAAgB,IAAY,EAAE,OAAqD;QACjF,MAAM,CAAC;IACT,CAAC;IAQH,sBAAC;AAAD,CAtBA,AAsBC,CAtBoC,iBAAiB,GAsBrD;AANM,0BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,8BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AATA;IAJC,OAAO,CAAC;QACP,YAAY,EAAE,CAAC;QACf,UAAU,EAAE,CAAC;KACd,CAAC;;;;sDAGD;AAdU,eAAe;IAR3B,MAAM,CAAC;QACN,UAAU,EAAE,iBAAiB;QAC7B,MAAM,EAAE,2BAA2B;QACnC,SAAS,EAAE,SAAS;QACpB,IAAI,EAAE,oDAAoD;QAC1D,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,iBAAiB,CAAC;KACjD,CAAC;GAEW,eAAe,CAsB3B;SAtBY,eAAe","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\r\n\r\n/**\r\n * @name Base64 To Gallery\r\n * @description This plugin allows you to save base64 data as a png image into the device\r\n * @usage\r\n * ```typescript\r\n * import { Base64ToGallery } from '@ionic-native/base64-to-gallery';\r\n *\r\n * constructor(private base64ToGallery: Base64ToGallery) { }\r\n *\r\n *\r\n * ...\r\n *\r\n *\r\n * this.base64ToGallery.base64ToGallery(base64Data, { prefix: '_img' }).then(\r\n *   res => console.log('Saved image to gallery ', res),\r\n *   err => console.log('Error saving image to gallery ', err)\r\n * );\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'Base64ToGallery',\r\n  plugin: 'cordova-base64-to-gallery',\r\n  pluginRef: 'cordova',\r\n  repo: 'https://github.com/Nexxa/cordova-base64-to-gallery',\r\n  platforms: ['Android', 'iOS', 'Windows Phone 8']\r\n})\r\n\r\nexport class Base64ToGallery extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Converts a base64 string to an image file in the device gallery\r\n   * @param {string} data The actual base64 string that you want to save\r\n   * @param {any} [options] An object with properties: prefix: string, mediaScanner: boolean. Prefix will be prepended to the filename. If true, mediaScanner runs Media Scanner on Android and saves to Camera Roll on iOS; if false, saves to Library folder on iOS.\r\n   * @returns {Promise<any>} returns a promise that resolves when the image is saved.\r\n   */\r\n  @Cordova({\r\n    successIndex: 2,\r\n    errorIndex: 3\r\n  })\r\n  base64ToGallery(data: string, options?: { prefix?: string; mediaScanner?: boolean }): Promise<any> {\r\n    return;\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}